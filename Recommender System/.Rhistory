sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
sourceData <- setDT(souceData)
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
View(sourceData)
View(touchData)
View(convoData)
sourceNames <- paste0("v", 1:10) # create variable names
sourceData[, c(sourcenames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
View(sourceData)
summary(sourceData[], sourceNames])
summary(sourceData[, sourceNames])
summary(sourceData[, sourceNames, with = FALSE])
str(sourceData[, sourceNames, with = FALSE])
summary(sourceData[, sourceNames, with = FALSE])
summary(sourceData[, c(sourceNames) := as.factor(), with = FALSE])
summary(sourceData[, c(sourceNames) := as.factor(x), with = FALSE])
summary(sourceData[, c(sourceNames), with = FALSE])
colSums(is.na(sourceData))
sums <- colSums(is.na(sourceData))
sums
class(sums)
str(sums)
sourceNames <- paste0("v", 1:20) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceNames <- paste0("v", 1:100) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
na.sums <- which(sums > nrow(sourceData))
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:100) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sums <- colSums(is.na(sourceData))
str(sums)
na.sums <- which(sums > nrow(sourceData))
na.sums
sums
na.sums <- which(sums == nrow(sourceData))
na.sums
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:150) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split t
sums <- colSums(is.na(sourceData))
str(sums)
na.sums <- which(sums == nrow(sourceData))
sourceData <- sourceData[, -na.sums, with = FALSE]
View(sourceData)
sourceNames <- paste0("v", 1:300) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:300) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the bar
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:20) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
View(sourceData)
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData$barLength <- nchar(sourceData$barcode)
summary(sourceData$barLength)
sourceData <- sourceData[sourceData$barLength == 14, ]
View(sourceData)
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:200) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData$barLength <- nchar(sourceData$barcode)
sourceData <- sourceData[sourceData$barLength == 14, ]
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:200) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData[!is.na(barcode), ]
sourceData <- sourceData[!is.na(barcode), ]
str(sourceData$barcode)
summary(sourceData$barcode)
sourceData$barLength <- nchar(sourceData$barcode)
sourceData <- sourceData[sourceData$barLength == 14, ]
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:200) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData <- sourceData[!is.na(barcode), ]
summary(sourceData$barcode)
sourceData$barLength <- nchar(sourceData$barcode)
summary(sourceData$barLength)
summary(as.factor(sourceData$barLength))
sourceData$barcode <- lapply(sourceData$barcode, function(x) gsub(" ", "", x))
## THIS IS THE DATA PREPARATION PART OF THE RECOMMENDER SYSTEM PROJECT
## THE DATA USED IS THE BIG5 2017 FAS - AND KONDUKO DATA
## LAST UPADTE: 2/19/2018
## WRITTEN BY: GREJELL SEGURA
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## tidying the source data ##
sourceNames <- paste0("v", 1:200) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData$barcode <- lapply(sourceData$barcode, function(x) gsub(" ", "", x))
sourceData <- sourceData[!is.na(barcode), ]
summary(sourceData$barcode)
sourceData$barLength <- nchar(sourceData$barcode)
summary(as.factor(sourceData$barLength))
sourceData[, barcode := gsub(" ", "", barcode)]
sourceData <- sourceData[!is.na(barcode), ]
summary(sourceData$barcode)
sourceData$barLength <- nchar(sourceData$barcode)
summary(as.factor(sourceData$barLength))
sourceData <- sourceData[sourceData$barLength == 14, ]
View(sourceData)
save(sourceData, "./dta/sourceData.RData")
save("./dta/sourceData.RData")
save(sourceData, file = "./dta/sourceData.RData")
str(sourceData)
str(touchData)
touchData <- unique(sourceData[, c("badgeMAC", "exhibitorid", "companyName")])
names(touchData)
touchData <- unique(touchData[, c("badgeMAC", "exhibitorid", "companyName")])
touchData <- unique(touchData[, c("badgeMAC", "exhibitorId", "companyName")])
touchData
names(touchData)[1] <- "barcode"
View(touchData)
touchData <- touchData[order(touchData$barcode),]
touchData <- touchData[!is.na(touchData$exhibitorId),]
# save the cleaned touch data
save(touchData, file = "./dta/touchData.RData")
## 3. tidying the convo data ##
str(convoData)
touchData$barcode <- as.character(touchData$barcode)
str(touchData)
# save the cleaned touch data
save(touchData, file = "./dta/touchData.RData")
convoData <- unique(convoData[, c("badgeMAC", "exhibitorId", "companyName")])
str(convoData)
convoData <- unique(convoData[, c("badgeMAC", "exhibitorId", "companyName")])
names(convoData)[1] <- "barcode"
convoData <- convoData[order(convoData$barcode),]
convoData <- convoData[!is.na(convoData$exhibitorId),]
convoData$barcode <- as.character(convoData$barcode)
str(convoData)
# save the cleaned touch data
save(convoData, file = "./dta/convoData.RData")
convoData <- convoData[!is.na(convoData$barcode),]
convoData <- convoData[convoData$barcode)!="",]
convoData <- convoData[convoData$barcode != "",]
touchData <- touchData[touchData$barcode != "",]
any(is.na(touchData))
any(is.na(convoData))
View(sourceData)
names(sourceData)
sourceData <- sourceData[, c("Country", "What.is.your.product.interest..MAIN..Big.5.", "What.is.your.company.s.primary.activity...Big.5.",
"Are.you.a.key.buyer.with.direct.purchasing.authority.for.your.company.", "REGISTRATION.TYPE",
"barcode")]
View(sourceData)
names(sourceData) <- c("country", "productInterest", "companyActivity", "purchasingAuthority", "registrationType", "barcode")
summary(sourceData$registrationType)
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## 1. tidying the source data ##
sourceNames <- paste0("v", 1:200) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData[, barcode := gsub(" ", "", barcode)]
sourceData <- sourceData[!is.na(barcode), ]
summary(sourceData$barcode)
sourceData$barLength <- nchar(sourceData$barcode)
summary(as.factor(sourceData$barLength))
sourceData <- sourceData[sourceData$barLength == 14, ]
sourceData <- sourceData[, c("Country", "CATEGORY", "What.is.your.product.interest..MAIN..Big.5.", "What.is.your.company.s.primary.activity...Big.5.",
"Are.you.a.key.buyer.with.direct.purchasing.authority.for.your.company.", "REGISTRATION.TYPE",
"barcode")]
names(sourceData) <- c("country", "category", "productInterest", "companyActivity", "purchasingAuthority", "registrationType", "barcode")
str(sourceData)
summary(sourceData$category)
sourceData <- sourceData[sourceData$category!="EXH]" | sourceData$category!="ORG]", ]
summary(sourceData$category)
sourceData$category!="EXH]"
sourceData <- sourceData[(sourceData$category!="EXH]" | sourceData$category!="ORG]"), ]
sourceData <- sourceData[(sourceData$category =="EXH]" | sourceData$category =="ORG]"), ]
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## 1. tidying the source data ##
sourceNames <- paste0("v", 1:200) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData[, barcode := gsub(" ", "", barcode)]
sourceData <- sourceData[!is.na(barcode), ]
summary(sourceData$barcode)
sourceData$barLength <- nchar(sourceData$barcode)
summary(as.factor(sourceData$barLength))
sourceData <- sourceData[sourceData$barLength == 14, ]
sourceData <- sourceData[, c("Country", "CATEGORY", "What.is.your.product.interest..MAIN..Big.5.", "What.is.your.company.s.primary.activity...Big.5.",
"Are.you.a.key.buyer.with.direct.purchasing.authority.for.your.company.", "REGISTRATION.TYPE",
"barcode")]
names(sourceData) <- c("country", "category", "productInterest", "companyActivity", "purchasingAuthority", "registrationType", "barcode").
sourceData <- sourceData[!(sourceData$category =="EXH]" | sourceData$category =="ORG]"), ]
names(sourceData) <- c("country", "category", "productInterest", "companyActivity", "purchasingAuthority", "registrationType", "barcode")
rm(list = ls())
library(tidyverse)
library(data.table)
# load data
sourceData <- read.csv("./dta/source.csv", sep = ",")
touchData <- read.csv("./dta/touch.csv", sep = ",")
convoData <- read.csv("./dta/convo.csv", sep = ",")
# convert to data.table
sourceData <- setDT(sourceData)
touchData <- setDT(touchData)
convoData <- setDT(convoData)
## 1. tidying the source data ##
sourceNames <- paste0("v", 1:200) # create variable names
sourceData[, c(sourceNames) := tstrsplit(Barcode.List, ",", fixed = TRUE)] # split the barcode.list variable
sourceData <- melt(sourceData, measure.vars = sourceNames, variable.name = "barcodeList", value.name = "barcode")
sourceData[, barcode := gsub(" ", "", barcode)]
sourceData <- sourceData[!is.na(barcode), ]
summary(sourceData$barcode)
sourceData$barLength <- nchar(sourceData$barcode)
summary(as.factor(sourceData$barLength))
sourceData <- sourceData[sourceData$barLength == 14, ]
sourceData <- sourceData[, c("Country", "CATEGORY", "What.is.your.product.interest..MAIN..Big.5.", "What.is.your.company.s.primary.activity...Big.5.",
"Are.you.a.key.buyer.with.direct.purchasing.authority.for.your.company.", "REGISTRATION.TYPE",
"barcode")]
names(sourceData) <- c("country", "category", "productInterest", "companyActivity", "purchasingAuthority", "registrationType", "barcode")
sourceData <- sourceData[!(sourceData$category =="EXH]" | sourceData$category =="ORG]"), ]
View(sourceData)
sourceData <- sourceData[!(sourceData$category =="EXH]" | sourceData$category =="ORG]" | sourceData$category ==""), ]
## 4. appending convo and touch data ##
visitData <- rbind(touchData, convoData)
str(touchData)
touchData <- unique(touchData[, c("badgeMAC", "exhibitorId", "companyName")])
names(touchData)[1] <- "barcode"
touchData <- touchData[order(touchData$barcode),]
touchData <- touchData[!is.na(touchData$exhibitorId),]
touchData <- touchData[!is.na(touchData$barcode),]
touchData <- touchData[touchData$barcode != "",]
touchData$barcode <- as.character(touchData$barcode)
str(touchData)
any(is.na(touchData))
# save the cleaned touch data
save(touchData, file = "./dta/touchData.RData")
## 3. tidying the convo data ##
str(convoData)
convoData <- unique(convoData[, c("badgeMAC", "exhibitorId", "companyName")])
names(convoData)[1] <- "barcode"
convoData <- convoData[order(convoData$barcode),]
convoData <- convoData[!is.na(convoData$exhibitorId),]
convoData <- convoData[!is.na(convoData$barcode),]
convoData <- convoData[convoData$barcode != "",]
convoData$barcode <- as.character(convoData$barcode)
str(convoData)
any(is.na(convoData))
# save the cleaned touch data
save(convoData, file = "./dta/convoData.RData")
## 4. appending convo and touch data ##
visitData <- rbind(touchData, convoData)
View(visitData)
visitData <- unique(visitData[, c("barcode", "exhibitorId")])
## 4. appending convo and touch data ##
visitData <- rbind(touchData, convoData)
visitData <- unique(visitData[, c("barcode", "exhibitorId")])
## 4. appending convo and touch data ##
visitData <- rbind(touchData, convoData)
visitData <- unique(visitData[, c("barcode", "exhibitorId", "companyName")])
## 4. appending convo and touch data ##
visitData <- rbind(touchData, convoData)
visitData <- unique(visitData[, c("barcode", "companyName")])
# create a matrix of badgeMac vs companyName
visitData <- dcast(visitData, badgeMAC ~ companyName)
# create a matrix of barcode vs companyName
visitData <- dcast(visitData, barcode ~ companyName)
visitData <- rbind(touchData, convoData)
visitData <- unique(visitData[, c("barcode", "companyName")])
# create a matrix of barcode vs companyName
visitData <- spread(visitData, barcode, companyName)
# create a matrix of barcode vs companyName
visitData <- spread(visitData, companyName, barcode)
# create a matrix of barcode vs companyName
visitData <- dcast(visitData, barcode ~ companyName)
visitData <- as.matrix(visitData)
View(visitData)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- t(sampleData)
sampleData <- as.data.frame(sampleData)
sampleData <- setDT(sampleData)
cor(sampleData)
corTable <- cor(sampleData)
rm(list = ls())
library(data.table)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- t(sampleData)
sampleData <- as.data.frame(sampleData)
sampleData <- setDT(sampleData)
corTable <- cor(sampleData)
install.packages("recommenderlab")
library(recommenderlab)
rm(list = ls())
library(data.table)
library(recommenderlab)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- as.data.frame(sampleData)
sampleData <- setDT(sampleData)
# corTable <- cor(sampleData)
?Recommender
r <- Recommender(sampleData, method = "UBCF")
rm(list = ls())
library(data.table)
library(recommenderlab)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- as.data.frame(sampleData)
# corTable <- cor(sampleData)
r <- Recommender(sampleData, method = "UBCF")
sampleData <- as.matrix(sampleData)
r <- Recommender(sampleData, method = "UBCF")
r <- Recommender(sampleData, method = "POPULAR")
sampleData <- t(sampleData)
sampleData <- t(sampleData)
r <- Recommender(sampleData, method = "POPULAR")
rm(list = ls())
library(data.table)
library(recommenderlab)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- as(sampleData, "realRatingMatrix")
View(sampleData)
r <- Recommender(sampleData, method = "POPULAR")
rm(list = ls())
library(data.table)
library(recommenderlab)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- as(sampleData, "realRatingMatrix")
# corTable <- cor(sampleData)
r1 <- Recommender(sampleData, method = "POPULAR")
r2 <- Recommender(sampleData, method = "UBCF")
r3 <- Recommender(sampleData, method = "IBCF")
rm(list = ls())
library(data.table)
library(recommenderlab)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
r1 <- Recommender(sampleData[c(1:34299), ], method = "POPULAR")
r2 <- Recommender(sampleData[c(1:34299), ],  method = "UBCF")
r3 <- Recommender(sampleData[c(1:34299), ],  method = "IBCF")
rec <- Recommender(sampleData[1:nrow(r)], method = "UBCF", param = list(method = "Jaccard", nn = 5))
rec <- Recommender(sampleData[1:nrow(sampleData)], method = "UBCF", param = list(method = "Jaccard", nn = 5))
rm(list = ls())
library(data.table)
library(recommenderlab)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- as(sampleData, "realRatingMatrix")
rm(list = ls())
library(data.table)
library(recommenderlab)
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
# sampleData <- as(sampleData, "realRatingMatrix")
# corTable <- cor(sampleData)
# r1 <- Recommender(sampleData[c(1:34299), ], method = "POPULAR")
# r2 <- Recommender(sampleData[c(1:34299), ],  method = "UBCF")
# r3 <- Recommender(sampleData[c(1:34299), ],  method = "IBCF")
rec <- Recommender(sampleData[1:nrow(sampleData)], method = "UBCF", param = list(method = "Jaccard", nn = 5))
data("Jester5k")
str(Jester5k)
sampleData <- as(sampleData, "realRatingMatrix")
rec <- Recommender(sampleData[nrow(sampleData)-1], method = "UBCF", param = list(method = "Jaccard", nn = 5))
recommend <- predict(rec, sampleData[nrow(sampleData)], n = 5)
recommend <- predict(rec, sampleData[1], n = 5)
recommend <- predict(rec, sampleData[1000])
recommend <- predict(rec, sampleData[1])
recommend <- predict(rec, sampleData[1:2])
recommend <- predict(rec, sampleData[1:2,])
recommend <- predict(rec, sampleData[,1])
rec <- Recommender(sampleData[1:nrow(sampleData)], method = "UBCF", param = list(method = "Jaccard", nn = 5))
recommend <- predict(rec, sampleData[1:nrow(sampleData)], type = "ratings")
recommend
View(recommend)
rec <- Recommender(sampleData[1:nrow(sampleData)], method = "UBCF", param = list(method = "Jaccard", nn = 5))
recommend <- predict(rec, sampleData[1:nrow(sampleData)])
recommend
View(recommend)
recommend$topNList
str(recommend)
?Recommender
rm(list = ls())
library(data.table)
library(recommenderlab)
data("Jester5k")
sampleData <- readRDS("./dta/RData/sourceData.RData")
sampleData <- setDT(sampleData)
sampleData <- sampleData[, -c(1,2)]
sampleData <- as(sampleData, "binaryRatingMatrix")
rec <- Recommender(sampleData[1:nrow(sampleData)], method = "UBCF", param = list(method = "Jaccard", nn = 5))
recommend <- predict(rec, sampleData[1:nrow(sampleData)])
recommend$topNList
recommend
View(recommend)
